@page "/products/{id:int}"
@inject IProductService ProductService

<PageTitle>@pageTitle</PageTitle>

@if (product == null)
{
    <span>@message</span>
}
else
{
    <Product Id="@product.Id"
             Title="@product.Title"
             Description="@product.Description"
             ImageUrl="@product.ImageUrl"
             Price="@product.Price" />
}

@code {
    private string pageTitle = string.Empty;
    private E_Commerce_WebApp.Shared.Product? product = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        pageTitle = "Loading product details ...";
        message = "Loading product details ...";
        var result = await ProductService.GetProductAsync(Id);

        if (result == null)
        {
            pageTitle = "Product not found";
            message = "Could not find the product.";
        }
        else if (!result.Success || result.Data == null)
        {
            pageTitle = "Product not found";
            message = result.Message;
        }
        else
        {
            pageTitle = result.Data.Title;
            product = result.Data;
        }
    }
}
